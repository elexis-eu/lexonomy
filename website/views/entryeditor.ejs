<!DOCTYPE HTML>
<html>
	<head>
		<meta charset="UTF-8"/>
		<title>Screenful Editor</title>
		<script type="text/javascript">var rootPath="../../../";</script>
		<script type="text/javascript" src="../../../libs/jquery.js"></script>
    <link type="text/css" rel="stylesheet" href="../../../libs/screenful/screenful.css" />
		<link type="text/css" rel="stylesheet" href="../../../libs/screenful/screenful-editor.css" />
		<link type="text/css" rel="stylesheet" href="../../../libs/screenful/screenful-theme-blue.css" />
		<script type="text/javascript" src="../../../libs/screenful/screenful.js"></script>
		<script type="text/javascript" src="../../../libs/screenful/screenful-editor.js"></script>
		<script type="text/javascript" src="../../../libs/screenful/screenful-loc-en.js"></script>
		<link type="text/css" rel="stylesheet" href="../../../libs/xonomy/xonomy.css" />
		<script type="text/javascript" src="../../../libs/xonomy/xonomy.js?2018-02-02"></script>
		<script type="text/javascript" src="../../../widgets/xematron.js"></script>
		<script type="text/javascript" src="../../../libs/xonomy-tools/dtdconvert/dtd2xonomy.js"></script>
		<script type="text/javascript" src="../../../widgets/xemplatron.js"></script>
		<link type="text/css" rel="stylesheet" href="../../../widgets/xemplatron.css" />
		<script type="text/javascript" src="../../../widgets/ske.js"></script>
		<link type="text/css" rel="stylesheet" href="../../../widgets/ske.css" />
		<script type="text/javascript" src="../../../widgets/sub.js"></script>
		<link type="text/css" rel="stylesheet" href="../../../widgets/sub.css" />
		<script type="text/javascript" src="../../../libs/js.cookie.js"></script>
		<style>
			.xonomy div.layby.open {width: 55%}
			<%-css%>
			<%-editing._css%>
		</style>
		<%if(editing._js){%>
			<script type="text/javascript">
				var customizeEditor=<%-editing._js%>;
				var usingOwnEditor=customizeEditor.editor && customizeEditor.harvester;
			</script>
		<%} else {%>
			<script type="text/javascript">
				var customizeEditor=null;
				var usingOwnEditor=false;
			</script>
		<%}%>
		<script type="text/javascript">
		Screenful.Editor.createUrl="../../../<%=dictID%>/entrycreate.json";
		Screenful.Editor.readUrl="../../../<%=dictID%>/entryread.json";
		Screenful.Editor.updateUrl="../../../<%=dictID%>/entryupdate.json";
		Screenful.Editor.deleteUrl="../../../<%=dictID%>/entrydelete.json";
		var dictID="<%=dictID%>";
		var xema=<%-JSON.stringify(xema)%>;
		var xemplate=<%-JSON.stringify(xemplate)%>;
		var kex=<%-JSON.stringify(kex)%>;
		var subbing=<%-JSON.stringify(subbing)%>;
		var xampl=<%-JSON.stringify(xampl)%>;
		var thes=<%-JSON.stringify(thes)%>;
		var collx=<%-JSON.stringify(collx)%>;
		var defo=<%-JSON.stringify(defo)%>;
		var titling=<%-JSON.stringify(titling)%>;
		var flagging=<%-JSON.stringify(flagging)%>;
    var ske_username = <%-JSON.stringify(user.ske_username)%>;
    var ske_apiKey = <%-JSON.stringify(user.ske_apiKey)%>;
		if(!xemplate[xema.root]) xemplate[xema.root]={shown: false};
		if(xemplate[xema.root].shown=="false") xemplate[xema.root].shown=false;
		Screenful.Editor.viewer=null;
		if(xemplate._xsl || xemplate._css || xemplate[xema.root].shown) {
			Screenful.Editor.viewer=function(div, entry){
				$(div).addClass("viewer").html(entry.contentHtml);
				$(div).find("a.xref").on("click", function(e){
					var text=$(e.delegateTarget).attr("data-text");
					window.parent.$("#searchbox").val(text);
					window.parent.Screenful.Navigator.list();
				});
			};
		}

		Screenful.Editor.editor=function(div, entry, uneditable){
			<%if(!user.canEdit){%> uneditable=true;<%}%>
			Xonomy.lang="en";

			var newXml="";
			<%if(xema._xonomyDocSpec){%>
				var docSpec=<%-xema._xonomyDocSpec%>;
				<%if(xema._newXml){%>newXml=`<%-xema._newXml%>`;<%}%>
			<%}else if(xema._dtd){%>
					var xmlStructure=parseDTD(`<%-xema._dtd%>`);
					var docSpec=struct2Xonomy(xmlStructure);
					newXml=initialDocument(xmlStructure);
			<%} else {%>
				var docSpec=Xematron.xema2docspec(xema);
			<%}%>
			if(!newXml) newXml=Xematron.xema2xml(xema);

			docSpec.allowModeSwitching=true;
			docSpec.onModeSwitch=function(mode){
				Cookies.set("xonomyMode_<%=dictID%>", mode);
				window.parent.$(".doctypes").removeClass("laic");
				window.parent.$(".doctypes").removeClass("nerd");
				window.parent.$(".doctypes").addClass(mode);
			};
			if(!uneditable) {
				docSpec.allowLayby=true;
				docSpec.laybyMessage="This is your temporary lay-by for entry fragments. You can drag and drop XML elements here.";
			}
			Xonomy.setMode(Cookies.get("xonomyMode_<%=dictID%>") || "<%-editing.xonomyMode%>");
			Ske.extendDocspec(docSpec, xema);
			Sub.extendDocspec(docSpec, xema);
			docSpec.onchange=Screenful.Editor.changed;
			if(uneditable) {
				for(elName in docSpec.elements) docSpec.elements[elName].isReadOnly=true;
				if(docSpec.unknownElement && typeof(docSpec.unknownElement)=="object") docSpec.unknownElement.isReadOnly=true;
				if(docSpec.unknownElement && typeof(docSpec.unknownElement)=="function") {
					var func=docSpec.unknownElement;
					docSpec.unknownElement=function(elName){
						var ret=func(elName);
						ret.isReadOnly=true;
						return ret;
					}
				}
			}

			if(!usingOwnEditor){
				if(customizeEditor && customizeEditor.adjustDocSpec)
					customizeEditor.adjustDocSpec(docSpec);
				Xonomy.render((entry ? entry.content : newXml), div, docSpec);
				if(!Xonomy.keyNav) Xonomy.startKeyNav(document, document.getElementById("container"));
			} else {
				customizeEditor.editor(div, entry ? entry : {content: newXml, id: 0}, uneditable);
			}
		};
		Screenful.Editor.harvester=function(div){
			if(!usingOwnEditor){
				return Xonomy.harvest();
			} else {
				return customizeEditor.harvester(div);
			}
		};
		Screenful.Editor.allowSourceCode=true;
		Screenful.Editor.formatSourceCode=function(str){
			return Screenful.formatXml(str);
		};
		Screenful.Editor.validateSourceCode=function(str){
			return Screenful.isWellFormedXml(str);
		};
		Screenful.Editor.cleanupSourceCode=function(str){
			return Screenful.cleanupXml(str);
		};
		</script>

		<link type="text/css" rel="stylesheet" href="../../../libs/screenful/screenful-history.css" />
		<script type="text/javascript" src="../../../libs/screenful/screenful-history.js"></script>
		<script type="text/javascript">
		Screenful.History.historyUrl="../../../<%=dictID%>/history.json";
		Screenful.History.isDeletion=function(revision){
			return revision.action=="delete" || revision.action=="purge";
		};
		Screenful.History.getRevisionID=function(revision){
			return revision.revision_id;
		};
		Screenful.History.printAction=function(revision){
			var content="";
			//actions: delete | create | update | purge
			//historiography: {apikey: apikey} | {uploadStart: uploadStart, filename: filename}
			content+="<div style='white-space: nowrap'>";
				if(revision.action=="create") content+="<b>Created</b>";
				else if(revision.action=="update") content+="<b>Changed</b>";
				else if(revision.action=="delete") content+="<b>Deleted</b>";
				else if(revision.action=="purge") content+="<b>Bulk-deleted</b>";
				if(revision.historiography.uploadStart) content+=" while uploading";
				if(revision.historiography.apikey) content+=" through API";
				if(revision.historiography.refactoredFrom) content+=" as a subentry of <a href='javascript:void(null)' onclick='parent.Screenful.Editor.open(null, "+revision.historiography.refactoredFrom+")'>"+revision.historiography.refactoredFrom+"</a>";
			content+="</div>";
			if(revision.email) content+="<div style='white-space: nowrap'><b>By:</b> "+revision.email+"</div>";
			content+="<div style='white-space: nowrap'><b>When:</b> "+revision.when+"</div>";
			return content;
			//return revision.action+", "+revision.email+", "+revision.when+", "+JSON.stringify(revision.historiography, null, "<br/>");
		};
		Screenful.History.fakeEntry=function(revision){
			return {id: revision.entry_id, content: revision.content, contentHtml: revision.contentHtml};
		};
		</script>

		<!--open an entry on page load if the URL is eg. "www.lexonomy.eu/mydictionary/edit/entry/#123456"-->
		<script type="text/javascript">
		function autoOpen(){
			if(window.parent && window.parent.location.hash){
				var entryID=window.parent.location.hash.replace(/^\#/, "");
				Screenful.Editor.open(null, entryID);
			}
		}
		</script>

	</head>
	<body onload="autoOpen()">
	</body>
</html>
