<forgot-password>
   <loading-overlay if={state.isLoading || state.isResetting}/>
   <div if={ state.messageSent } >
      <div class="message messageSuccess">
         Your password is updated. You can now log in with your e-mail address and password.
      </div>
      <br><br>
      <div class="center-align">
         <a href="#/"
               class="btn btn-primary">log in</a>
      </div>
   </div>
   <div if={ !state.isTokenValid && !state.isLoading}
         class="section message messageError">
      This recovery link is invalid. It may have expired or has been used before.
   </div>
   <div if={ state.errorMessage }
         class="section message messageError">
      { state.errorMessage }
   </div>
   <div if={ !state.messageSent && state.isTokenValid}>
      <div class="input-field">
         <input id="password"
               type="password"
               class="validate"
               onkeyup={ onKeyUp }/>
         <label for="password">Your password</label>
         <span class="helper-text">Set your password to access Lexonomy.</span>
         <input id="token"
               type="hidden"
               value={ props.token }/>
      </div>
      <button class="btn waves-effect waves-light"
            name="login"
            id="loginButton"
            onclick={ setPassword }>Set password
         <i class="material-icons right">send</i>
      </button>
   </div>

   <script>
      export default {
         state: {
            messageSent: false,
            isTokenValid: false,
            isLoading: true,
            errorMessage: ''
         },

         onMounted() {
            this.auth.verifyToken(this.props.token, "recovery")
                  .always(response => {
                     this.update({
                        isLoading: false,
                        isTokenValid: response && response.success
                     })
                  })
         },

         onKeyUp(evt){
            evt.keyCode == 13 && this.setPassword()
         },

         setPassword() {
            let password = $("#password").val()
            if(password){
               this.update({isResetting: true})
               this.auth.resetPassword(this.props.token, $("#password").val())
                  .always(response => {
                        this.update({
                           isResetting: false,
                           messageSent: response.success,
                           errorMessage: !response.success ? "Incorrect e-mail." : ""
                        })
                     })
            }
         }
      }
   </script>
</forgot-password>
