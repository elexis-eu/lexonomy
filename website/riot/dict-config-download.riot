<dict-config-download>
   <loading-overlay if={state.isLoading || state.isSaving}/>
   <dict-nav links={[["config", "Configure"], ["download", "Download settings"]]}/>
   <h3>Download settings</h3>
   <div class="row">
      <div class="input-field">
         <textarea id="download_xslt"
               class="materialize-textarea">{ state.data.xslt }</textarea>
         <label for="download_xslt">XSLT transformation on download</label>
         <span class="helper-text">You can use this functionality to automatically apply an XSLT transformation when the dictionary is downloaded. If you do not input valid XSLT here, no transformation will be applied.</span>
      </div>
   </div>
   <dict-config-buttons save-data={saveData}></dict-config-buttons>

   <script>
      export default {
         state: {
            isLoading: true,
            isSaving: false,
            data: {xslt: ''}
         },

         onMounted() {
            this.store.loadDictionaryConfig("donwload")
                  .done(response => {
                     this.state.data = response.content
                  })
                  .always(() => {
                     this.update({isLoading: false})
                     M.updateTextFields()
                     M.textareaAutoResize($('#download_xslt'))
                  })
         },

         saveData() {
            var xslt = $('#download_xslt').val()
            try {
               var data = {xslt: xslt}
               // TODO  parsed_xslt??
               parsed_xslt = $.parseXML(xslt)
               this.update({isSaving: true})
               this.store.updateDictionaryConfig("download", data)
                     .always(() => this.update({isSaving: false}))
            } catch(e) {
               M.toast({html: 'Failed to parse XSLT'})
            }
         }
      }
   </script>

</dict-config-download>
