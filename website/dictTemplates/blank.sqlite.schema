CREATE TABLE configs (
    id      TEXT PRIMARY KEY, 
    json    TEXT
);
INSERT INTO configs VALUES('publico','{"public": false}');
INSERT INTO configs VALUES('searchability','{"searchableElements": []}');
INSERT INTO configs VALUES('editing','{"xonomyMode": "nerd"}');
INSERT INTO configs VALUES('kex','{"url": "https://app.sketchengine.eu/", "apiurl": "https://api.sketchengine.eu/bonito/run.cgi"}');
INSERT INTO configs VALUES('xampl','{"container": "",	"template": "",	"markup": ""}');
INSERT INTO configs VALUES('xema','{"root": "entry","elements": {	"entry": {	"filling": "chd",		"values": [],"children": [],	"attributes": {}}}}');
INSERT INTO configs VALUES('xemplate','{"entry": {"shown": false,	"layout": "block"	}}');
CREATE TABLE searchables (
    id          INTEGER PRIMARY KEY AUTOINCREMENT,
    entry_id    INTEGER REFERENCES entries (id) ON DELETE CASCADE,
    txt         TEXT,
    level       INTEGER
);
CREATE INDEX search ON searchables (txt, level);
CREATE TABLE history (
    id             INTEGER  PRIMARY KEY AUTOINCREMENT,
    entry_id       INTEGER,
    [action]       TEXT,
    [when]         DATETIME,
    email          TEXT,
    xml            TEXT,
    historiography TEXT
);
CREATE TABLE sub (
    id          INTEGER PRIMARY KEY AUTOINCREMENT,
    parent_id   INTEGER REFERENCES entries (id) ON DELETE CASCADE,
    child_id    INTEGER REFERENCES entries (id) ON DELETE CASCADE
);
CREATE TABLE entries (
    id              INTEGER PRIMARY KEY AUTOINCREMENT,
    doctype         TEXT,
    xml             TEXT,
    title           TEXT,
    sortkey         TEXT,
    flag            TEXT DEFAULT "",
    needs_update    BOOLEAN DEFAULT (0)
);
CREATE TABLE linkables (
    id          INTEGER PRIMARY KEY AUTOINCREMENT,
    entry_id    INTEGER REFERENCES entries (id) ON DELETE CASCADE,
    txt         TEXT,
    element     TEXT,
    preview     TEXT
);
CREATE INDEX history_by_entry_id ON history (entry_id, "when");
CREATE INDEX history_by_email ON history (email, "when");
CREATE INDEX history_by_when ON history ("when");
CREATE INDEX history_by_action ON history ("action", "when");
CREATE INDEX sortkey ON entries (sortkey);
CREATE INDEX needs_re ON entries (needs_update);
CREATE INDEX flag ON entries (flag);